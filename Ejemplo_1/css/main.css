* {
  margin: 0;
  padding: 0;
  list-style: none;
  text-decoration: none; }

.circulo1, .circulo2 {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background: blue;
  border: 3px solid black; }

.circulo1 {
  animation: circulo1 3s infinite alternate; }

@keyframes circulo1 {
  to {
    width: 100px;
    height: 100px; } }
.circulo2 {
  animation: circulo2 3s infinite alternate-reverse;
  background: green; }

@keyframes circulo2 {
  to {
    transform: scale(1.5); } }
p {
  background: coral;
  margin: 10px;
  padding: 0.5em;
  font-size: large;
  font-weight: 600;
  /*la propiedad transition permite indicar el tiempo y una propiedad en especifico*/
  /*En este caso, se piede al navegador que con cualquier propiedad que cambie, calcule todos los estados intermedios en el tiempo definido*/
  transition: all 0.8s;
  /*Por lo que se puede observar que la propiedad text-align no es animable*/ }
  .animar p.parrafo1 {
    text-align: right; }

.animar p {
  background: initial; }

span {
  font-size: 30px;
  display: inline-block;
  padding: inherit;
  position: relative;
  left: 0;
  /* 0 como estado incial*/
  transition: all 0.8s;
  font-size: unset; }
  .animar span {
    left: 86%; }

strong {
  display: inline-block;
  transition: all 0.8s; }
  .animar strong {
    transform: translateX(calc(100vw - 100% - 2em)); }

.flex {
  display: flex;
  background: cadetblue;
  padding: 1em;
  justify-content: space-between;
  margin: 2em; }

.item {
  padding: 3em 5em;
  color: darkred;
  border: 1px solid black;
  transition: all 0.8s; }
  .item:first-child {
    background: floralwhite;
    order: 0; }

/*al tratar de animar la propiedad order de flex, no realiza una animacion por estados, sino directamente porque es un entero*/
.animar .item:first-child {
  order: 5; }

button {
  padding: 10px;
  margin: 10px;
  background: darkorange;
  font-size: large;
  font-weight: 600; }

/*# sourceMappingURL=main.css.map */
